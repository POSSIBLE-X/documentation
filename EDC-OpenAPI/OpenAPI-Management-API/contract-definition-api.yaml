openapi: 3.0.1
paths:
  /v2/contractdefinitions:
    post:
      description: Creates a new contract definition
      operationId: createContractDefinition
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ContractDefinitionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
          description: contract definition was created successfully. Returns the Contract
            Definition Id and created timestamp
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: Request body was malformed
        "409":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Could not create contract definition, because a contract definition\
            \ with that ID already exists"
      tags:
      - Contract Definition
    put:
      description: Updated a contract definition with the given ID. The supplied JSON
        structure must be a valid JSON-LD object
      operationId: updateContractDefinition
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ContractDefinitionInput'
      responses:
        "204":
          description: Contract definition was updated successfully
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: A contract definition with the given ID does not exist
      tags:
      - Contract Definition
  /v2/contractdefinitions/request:
    post:
      description: Returns all contract definitions according to a query
      operationId: queryAllContractDefinitions
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/QuerySpec'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ContractDefinitionOutput'
          description: The contract definitions matching the query
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: Request was malformed
      tags:
      - Contract Definition
  /v2/contractdefinitions/{id}:
    delete:
      description: "Removes a contract definition with the given ID if possible. DANGER\
        \ ZONE: Note that deleting contract definitions can have unexpected results,\
        \ especially for contract offers that have been sent out or ongoing or contract\
        \ negotiations."
      operationId: deleteContractDefinition
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          example: null
      responses:
        "200":
          description: Contract definition was deleted successfully
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: A contract definition with the given ID does not exist
      tags:
      - Contract Definition
    get:
      description: Gets an contract definition with the given ID
      operationId: getContractDefinition
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          example: null
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDefinitionOutput'
          description: The contract definition
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: An contract agreement with the given ID does not exist
      tags:
      - Contract Definition
components:
  schemas:
    ApiErrorDetail:
      type: object
      example: null
      properties:
        invalidValue:
          type: object
          example: null
        message:
          type: string
          example: null
        path:
          type: string
          example: null
        type:
          type: string
          example: null
    ContractDefinitionInput:
      type: object
      example:
        '@context':
          edc: https://w3id.org/edc/v0.0.1/ns/
        '@id': definition-id
        accessPolicyId: asset-policy-id
        contractPolicyId: contract-policy-id
        assetsSelector: []
      properties:
        '@id':
          type: string
          example: null
        '@type':
          type: string
          example: https://w3id.org/edc/v0.0.1/ns/ContractDefinition
        accessPolicyId:
          type: string
          example: null
        assetsSelector:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/Criterion'
        contractPolicyId:
          type: string
          example: null
    ContractDefinitionOutput:
      type: object
      example:
        '@context':
          edc: https://w3id.org/edc/v0.0.1/ns/
        '@id': definition-id
        edc:accessPolicyId: asset-policy-id
        edc:contractPolicyId: contract-policy-id
        edc:assetsSelector: []
        edc:createdAt: 1688465655
      properties:
        '@id':
          type: string
          example: null
        '@type':
          type: string
          example: https://w3id.org/edc/v0.0.1/ns/ContractDefinition
        accessPolicyId:
          type: string
          example: null
        assetsSelector:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/Criterion'
        contractPolicyId:
          type: string
          example: null
        createdAt:
          type: integer
          format: int64
          example: null
    Criterion:
      type: object
      example:
        '@context':
          edc: https://w3id.org/edc/v0.0.1/ns/
        '@type': Criterion
        operandLeft: fieldName
        operator: =
        operandRight: some value
      properties:
        '@type':
          type: string
          example: https://w3id.org/edc/v0.0.1/ns/Criterion
        operandLeft:
          type: object
          example: null
        operandRight:
          type: object
          example: null
        operator:
          type: string
          example: null
    IdResponse:
      type: object
      example:
        '@context':
          edc: https://w3id.org/edc/v0.0.1/ns/
        '@id': id-value
        createdAt: 1688465655
      properties:
        '@id':
          type: string
          example: null
        createdAt:
          type: integer
          format: int64
          example: null
    JsonArray:
      type: array
      example: null
      items:
        $ref: '#/components/schemas/JsonValue'
      properties:
        empty:
          type: boolean
          example: null
        valueType:
          type: string
          enum:
          - ARRAY
          - OBJECT
          - STRING
          - NUMBER
          - "TRUE"
          - "FALSE"
          - "NULL"
          example: null
    JsonObject:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/JsonValue'
      example: null
      properties:
        empty:
          type: boolean
          example: null
        valueType:
          type: string
          enum:
          - ARRAY
          - OBJECT
          - STRING
          - NUMBER
          - "TRUE"
          - "FALSE"
          - "NULL"
          example: null
    JsonValue:
      type: object
      example: null
      properties:
        valueType:
          type: string
          enum:
          - ARRAY
          - OBJECT
          - STRING
          - NUMBER
          - "TRUE"
          - "FALSE"
          - "NULL"
          example: null
    QuerySpec:
      type: object
      example:
        '@context':
          edc: https://w3id.org/edc/v0.0.1/ns/
        '@type': QuerySpec
        offset: 5
        limit: 10
        sortOrder: DESC
        sortField: fieldName
        filterExpression: []
      properties:
        '@type':
          type: string
          example: https://w3id.org/edc/v0.0.1/ns/QuerySpec
        filterExpression:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/Criterion'
        limit:
          type: integer
          format: int32
          example: null
        offset:
          type: integer
          format: int32
          example: null
        sortField:
          type: string
          example: null
        sortOrder:
          type: string
          enum:
          - ASC
          - DESC
          example: null
